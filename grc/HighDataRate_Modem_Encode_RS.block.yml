id: HighDataRate_Modem_Encode_RS
label: Encode_RS
category: '[HighDataRate_Modem]'

templates:
  imports: import HighDataRate_Modem
  make: HighDataRate_Modem.Encode_RS(${interleave}, ${dual_basis})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: interleave 
  label: interleave depth (Future)
  dtype: int
  default: 1
- id: dual_basis 
  label: Dual Basis (Future)
  dtype: int
  default: 1
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  domain: stream
  dtype: byte
  vlen: 223
#  optional: ...

outputs:
- label: out
  domain: stream
  dtype: byte
  vlen: 255
#  optional: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
