id: HighDataRate_Modem_Tag_FrameASM_xx
label: Tag_FrameASM_xx
category: '[HighDataRate_Modem]'

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
-   id: type
    label: IO Type
    dtype: enum
    options: [float, byte]
    option_attributes:
       fcn: [ff, bb]
    hide: part
-   id: waveform
    label: BPSK or QPSK
    dtype: int
    default: 1
    options: [1, 2]
    option_labels: [1 = BPSK, 2 = QPSK]
    hide: part
-   id: ASM_length
    label: CCSDS ASM Length
    dtype: int
    default: 32
    options: [32, 48]
    option_labels: [32 Bits, 48 Bits (Convolutional ASM)]
    hide: part
-   id: threshold
    label: Allowed ASM Bit Errors
    dtype: int
    default: 1
    options: [0, 1, 2, 3, 4, 5, 6, 7]
    option_labels: [0, 1, 2, 3, 4, 5, 6, 7]
    hide: part

#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
#  domain: ...
  dtype: ${ type }
#  vlen: ...
#  optional: ...

outputs:
- label: out
#  domain: ...
  dtype: ${ type }

templates:
  imports: import HighDataRate_Modem
  make: HighDataRate_Modem.Tag_FrameASM_${type.fcn}(${waveform}, ${ASM_length}, ${threshold})

documentation: |-
    This block examines input for specific CCSDS ASM pattern, one bit at a time.
       - All possible phases of ASM for BPSK and QPSK are examined simultaneously
       - This block annotates the input stream with tags at ASM epochs.

    Input:
        A stream of Float" or "char" (byte) items.
    Output:
        A stream of "Float" or "char" (byte) items.
    Parameters:
        I/O Type: Float or Byte.
        BPSK or QPSK: Select BPSK or QPSK waveform.
           - Select BPSK for 0/180 degree ASM patterns.
           - Select QPSK for 45/135/225/315 degree ASM patterns.
       - CCSDS ASM Length: Select ASM Length.
           - 32 Bits for CCSDS ASM.
           - 48 Bits for fixed repeating part of rate 1/2 Convolutional Encoded CCSDS 32 bit ASM.
       - Allowed ASM Bit Errors: Select threshold value for allowed bit errors in ASM.
           - Selection based on noise environment.

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
